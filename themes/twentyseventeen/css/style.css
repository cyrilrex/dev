/* Helpers */
/* Library */
@import url("https://fonts.googleapis.com/css?family=Libre+Franklin:300,300i,400,400i,700,700i,800,800i");
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/**
 * @file
 * This file lists the breakpoints that we are going to use in the theme.
 */
/**
 * @file
 * This file lists the colours that we are going to use in the theme.
 *
 * Please keep the number of colours to a minimum for sake of maintainability.
 *
 * If using greys, let's not have 50 shades of them.
 *
 * We put the world 'colour' as a prefix on all our colours here so they show
 * up beside each other when typing '$colour-...' in Atom with the Pigments
 * plugin.
 */
/* Default Colours */
/* Theme Colours */
/* Greys */
/**
 * @file
 * This file lists/imports the fonts that we are going to use in the theme.
 */
/**
 * @file
 * This file lists/imports the mixins that we have created for the theme.
 */
/**
 * @file
 * This file lists/imports the extends that we have created for the theme.
 */
.centered-xy {
  position: absolute;
  top: 50%;
  left: 50%;
  -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
  text-align: center; }

/**
 * @file
 * This file creates the out layout of the site and all the regions.
 */
/* The Layout Contained class is a handy one for wrapper around all elements
that we want to have centered on the page, but also want them to have 100%
width backgrounds so we can put a full widh background colour on them.

For example, you might want a 100% width red background on the navigation,
but want the menu links 'contained' within the width of the content area. */
.layout-contained {
  max-width: 1024px;
  margin: auto; }

/* Layout when there is only one sidebar */
/* Layout for Sidebar First and Main Content */
@media (min-width: 961px) {
  .layout-one-sidebar.layout-sidebar-first .layout-content {
    width: 66.10169%;
    float: right;
    margin-right: 0; }
  .layout-one-sidebar.layout-sidebar-first .layout-region-sidebar-first {
    width: 32.20339%;
    float: left;
    margin-right: 1.69492%; } }

/* Layout for Sidebar Second and Main Content */
@media (min-width: 961px) {
  .layout-one-sidebar.layout-sidebar-second .layout-content {
    width: 66.10169%;
    float: left;
    margin-right: 1.69492%; }
  .layout-one-sidebar.layout-sidebar-second .layout-region-sidebar-second {
    width: 32.20339%;
    float: right;
    margin-right: 0; } }

/* Layout there are two sidebars */
@media (min-width: 601px) {
  .layout-two-sidebars .layout-content {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
  .layout-two-sidebars .layout-region-sidebar-first {
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%; }
  .layout-two-sidebars .layout-region-sidebar-second {
    width: 49.15254%;
    float: right;
    margin-right: 0; } }

@media (min-width: 961px) {
  .layout-two-sidebars .layout-content {
    margin-left: 23.72881%;
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%; }
  .layout-two-sidebars .layout-region-sidebar-first {
    margin-left: -77.9661%;
    width: 23.72881%;
    float: left;
    margin-right: 1.69492%; }
  .layout-two-sidebars .layout-region-sidebar-second {
    width: 23.72881%;
    float: right;
    margin-right: 0; } }

/* Left and Right are two small classes that I use in the 'Copyright'
section of the page.html.twig file */
.left {
  text-align: center; }
  @media (min-width: 601px) {
    .left {
      float: left;
      text-align: left; } }

.right {
  text-align: center; }
  @media (min-width: 601px) {
    .right {
      float: right;
      text-align: right; } }

/**
 * @file
 * This file creates helper classes that can be added to items to show/hide
 * them depending on the screen width being viewed.
 */
@media (min-width: 601px) {
  .small-screen-only {
    display: none; } }

@media (min-width: 961px) {
  .small-screen-only {
    display: none; } }

@media (min-width: 961px) {
  .small-medium-screen-only {
    display: none; } }

.large-screen-only {
  display: none; }
  @media (min-width: 961px) {
    .large-screen-only {
      display: block; } }

.large-medium-screen-only {
  display: none; }
  @media (min-width: 601px) {
    .large-medium-screen-only {
      display: block; } }

/* Elements */
/**
 * @file
 * This file creates the styling for the a elements.
 */
a {
  color: #333333; }

/**
 * @file
 * This file creates the styling for the blockquote element.
 */
blockquote {
  color: #666666;
  font-size: 18px;
  font-style: italic;
  line-height: 1.7;
  margin: 0;
  overflow: hidden;
  padding: 0; }

/**
 * @file
 * This file creates the styling for the body element.
 */
body {
  background: url("../images/header__not-front.jpg") no-repeat;
  color: #333333;
  overflow-x: hidden; }
  body.path-frontpage {
    background: url("../images/header.jpg") no-repeat 50% 50%;
    background-size: cover; }

body .post-header {
  background: #fff;
  padding-top: 2rem; }

/**
 * @file
 * This file creates the styling for the dl element.
 */
dl dt {
  font-weight: 700; }

dl dd {
  margin: 0 1.5rem 1.5rem; }

/**
 * @file
 * This file creates the styling for the form elements.
 */
fieldset {
  border: 1px solid #bbbbbb;
  margin: 0 2px 1rem;
  padding: 0.35rem 0.625rem 0.75rem; }

label {
  font-weight: 800;
  margin-bottom: 0.5rem; }

input[type="text"],
input[type="search"],
input[type="password"],
textarea {
  border: 1px solid #bbbbbb;
  border-radius: 3px;
  color: #666666;
  padding: 0.7rem;
  width: 100%; }
  input[type="text"]:focus, input[type="text"]:hover,
  input[type="search"]:focus,
  input[type="search"]:hover,
  input[type="password"]:focus,
  input[type="password"]:hover,
  textarea:focus,
  textarea:hover {
    border-color: #333333;
    color: #222222; }

input[type="reset"] {
  background: #bbbbbb;
  color: #222222; }

select {
  border: 1px solid #bbbbbb;
  border-radius: 3px;
  height: 3rem;
  max-width: 100%; }

input[type="checkbox"],
input[type="radio"] {
  margin-right: 0.5rem;
  padding: 0; }

input.form-submit {
  background: #333333;
  border: 0;
  color: #fff;
  font-size: 0.875rem;
  font-weight: 800;
  padding: 0.75rem 2rem;
  transition: background 0.2s; }
  input.form-submit:focus, input.form-submit:hover {
    background: #767676;
    color: #333333; }

.dropbutton .dropbutton-action > * {
  padding: 0.7rem; }

.dropbutton-multiple .dropbutton .dropbutton-action > * {
  margin-right: 0; }

.js .dropbutton-widget {
  border-color: #333333; }

.form-item label {
  display: block;
  margin-bottom: 0.5rem; }

/**
 * @file
 * This file creates the styling for the h elements.
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  clear: both;
  line-height: 1.4;
  margin: 0 0 0.75rem;
  padding: 1.5rem 0 0; }
  h1:first-child,
  h2:first-child,
  h3:first-child,
  h4:first-child,
  h5:first-child,
  h6:first-child {
    padding-top: 0; }
  h1 a,
  h2 a,
  h3 a,
  h4 a,
  h5 a,
  h6 a {
    text-decoration: none; }
    h1 a:focus, h1 a:hover,
    h2 a:focus,
    h2 a:hover,
    h3 a:focus,
    h3 a:hover,
    h4 a:focus,
    h4 a:hover,
    h5 a:focus,
    h5 a:hover,
    h6 a:focus,
    h6 a:hover {
      text-decoration: underline; }

h1 {
  font-size: 30px;
  font-weight: 300; }

h2 {
  color: #666666;
  font-size: 26px;
  font-weight: 300; }

h3 {
  font-size: 18px; }

h4 {
  font-size: 16px;
  font-weight: 800; }

h5 {
  color: #767676;
  font-size: 13px;
  font-weight: 800;
  letter-spacing: 0.15rem;
  text-transform: uppercase; }

h6 {
  font-size: 15px;
  font-weight: 800; }

/**
 * @file
 * This file creates the styling for the html element.
 */
html {
  font-family: "Libre Franklin", Arial, Helvetica, "Nimbus Sans L", sans-serif;
  font-size: 16px; }

/**
 * @file
 * This file creates the styling for the p elements.
 */
p {
  margin: 0 0 1.5rem; }

/**
 * @file
 * This file creates the styling for the pre element.
 */
pre {
  background: #dddddd;
  font-family: "Courier New", "DejaVu Sans Mono", monospace, sans-serif;
  font-size: 15px;
  line-height: 1.6;
  margin-bottom: 1.6rem;
  max-width: 100%;
  overflow: auto;
  padding: 1.6rem;
  white-space: pre-wrap;
  word-wrap: break-word; }

/**
 * @file
 * This file creates the styling for the table element.
 */
table {
  border-collapse: collapse;
  margin: 0 0 1.5rem;
  width: 100%; }

table tr {
  border-bottom: 1px solid #dddddd; }

table tr td {
  padding: 0.4rem 0; }

table th {
  padding: 0.4rem 0;
  text-align: left; }
  table th:first-child {
    padding-left: 0; }

table a.tabledrag-handle .handle {
  padding: 1rem; }

/* Regions */
/**
 * @file
 * This file that creates the CSS for the footer region.
 */
.footer {
  clear: both; }

/**
 * @file
 * This file that creates the CSS for the header region.
 */
@media (min-width: 601px) {
  .path-frontpage .header {
    height: calc(75vh - 35px); } }

@media (min-width: 601px) {
  .header {
    height: 165px;
    position: relative; } }

.header .block-system-branding-block {
  bottom: 2rem;
  position: absolute;
  width: 100%; }
  @media (min-width: 961px) {
    .header .block-system-branding-block {
      width: 100%; } }

/**
 * @file
 * This file that creates the CSS for the primary menu region.
 */
.toolbar-fixed .primary-menu {
  top: 39px; }

.toolbar-tray-open .primary-menu {
  top: 80px; }

.layout-primary-menu {
  background: #fff;
  padding-top: 0.5rem; }

.primary-menu {
  position: relative;
  z-index: 500;
  top: 0;
  right: 0;
  left: 0; }

.region-primary-menu {
  font-size: 16px; }

.region-primary-menu .menu {
  margin: 0; }

.region-primary-menu .menu .menu-item {
  padding: 0.5rem 1rem 0; }
  @media (min-width: 961px) {
    .region-primary-menu .menu .menu-item {
      display: inline-block;
      margin-right: -4px; }
      .region-primary-menu .menu .menu-item:nth-child(1) {
        padding-left: 0; } }

.region-primary-menu .menu .menu-item a {
  border-bottom: 3px solid #fff;
  display: block;
  color: #333333;
  padding-bottom: 0.5rem;
  text-decoration: none;
  text-transform: uppercase; }
  .region-primary-menu .menu .menu-item a:focus, .region-primary-menu .menu .menu-item a:hover, .region-primary-menu .menu .menu-item a.is-active {
    border-bottom: 3px solid #000;
    color: #000; }

/**
 * @file
 * This file that creates the CSS for the sidebar region(s).
 */
.region-sidebar-second .block {
  margin-bottom: 3rem; }

.region-sidebar-second .block-menu .menu {
  margin: 0; }

.region-sidebar-second .block-menu .menu .menu-item {
  border-top: 1px solid #dddddd;
  padding: 0.5rem 0; }
  .region-sidebar-second .block-menu .menu .menu-item:last-of-type {
    border-bottom: 1px solid #dddddd; }
  .region-sidebar-second .block-menu .menu .menu-item a {
    text-decoration: none; }
    .region-sidebar-second .block-menu .menu .menu-item a:focus, .region-sidebar-second .block-menu .menu .menu-item a:hover {
      border-bottom: 3px solid #000;
      color: #000; }

/* Classes */
/**
 * @file
 * This file is used to style the user-form classes.
 */
.user-forms .centered-xy {
  top: 50%; }

.user-forms form {
  text-align: left; }

.user-forms .block-local-tasks-block {
  text-align: center; }

@media (min-width: 961px) {
  .user-forms .block-local-tasks-block ul.tabs {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between; } }

.user-forms .block-local-tasks-block ul.tabs > li {
  display: block;
  margin: 0 auto;
  width: 340px; }
  @media (min-width: 961px) {
    .user-forms .block-local-tasks-block ul.tabs > li {
      margin: 0;
      width: auto; } }

.user-forms .block-local-tasks-block ul.tabs a {
  color: #333333;
  padding: .5rem 1rem; }
  .user-forms .block-local-tasks-block ul.tabs a.is-active, .user-forms .block-local-tasks-block ul.tabs a:focus, .user-forms .block-local-tasks-block ul.tabs a:hover {
    color: #fff;
    background: #333333; }

.user-forms .page-title {
  margin: 2rem 0 3rem;
  width: 100%; }

.user-forms form .form-item {
  margin: 2rem auto;
  max-width: 340px; }
  @media (min-width: 961px) {
    .user-forms form .form-item {
      max-width: none; } }

.user-forms form .form-item label {
  font-weight: bold; }

.user-forms form .form-item input {
  max-width: 100%; }

.user-forms .back-to-site {
  bottom: 8px;
  position: absolute;
  right: 0; }
  .user-forms .back-to-site a {
    color: #333333; }

.user-forms__register .back-to-site {
  position: relative; }

/* View Modes */
/**
 * @file
 * This file is used to style nodes when viewed using the 'Teaser' view mode.
 */
.node--view-mode-teaser .field--name-field-image {
  float: left;
  margin-right: 1rem; }

.node--view-mode-teaser .field--name-body {
  overflow: hidden; }

.node--view-mode-teaser .node__submitted {
  background: #dddddd;
  margin-bottom: 1rem;
  padding: .5rem 1rem; }

.node--view-mode-teaser .field--name-field-tags {
  clear: both;
  margin-bottom: 1rem; }

.node--view-mode-teaser .field--name-field-tags .field__item {
  display: inline; }
  .node--view-mode-teaser .field--name-field-tags .field__item::after {
    content: ", "; }
  .node--view-mode-teaser .field--name-field-tags .field__item:last-of-type::after {
    content: ""; }

.node--view-mode-teaser .node__links {
  background: #dddddd;
  margin-bottom: 1rem;
  padding: .5rem 1rem; }

.node--view-mode-teaser::after {
  border-bottom: 1px solid #dddddd;
  content: "";
  display: block;
  margin: 2rem 0; }

/* Content Types */
/* Paragraphs - Structured Content Sections/Items */
/* Views */
/* Blocks */
/**
 * @file This file style generic block items.
 */
h2.block__title {
  color: #222222;
  font-size: 0.6875rem;
  font-weight: 800;
  letter-spacing: 0.1818em;
  margin-bottom: 1rem;
  text-transform: uppercase; }

/**
 * @file This file styles the branding block items.
 */
.block-system-branding-block .site-logo {
  float: left; }

.block-system-branding-block .site-name a {
  color: #fff;
  font-size: 2.25rem;
  font-weight: 800;
  text-decoration: none;
  text-shadow: 1px 1px 1px #000; }

/* Fields */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
